rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if a user is the owner of a document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if the user belongs to a specific household.
    function isInHousehold(householdId) {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.householdId == householdId;
    }

    // Users can only read/write their own user document.
    match /users/{userId} {
      allow read, update, delete: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
    }

    // Households can be read/written only by their members.
    match /households/{householdId} {
      allow read, update: if isSignedIn() && isInHousehold(householdId);
      // Allow creation by any signed-in user. The create logic in the app
      // will then assign the creating user to this household.
      allow create: if isSignedIn();

      // Pantry Items: Only household members can manage them.
      match /pantryItems/{itemId} {
        allow read, write, delete: if isInHousehold(householdId);
      }

      // Grocery List Items: Only household members can manage them.
      match /groceryListItems/{itemId} {
        allow read, write, delete: if isInHousehold(householdId);
      }
      
      // Favorite Recipes: Only household members can manage them.
      match /favoriteRecipes/{recipeId} {
        allow read, write, delete: if isInHousehold(householdId);
      }
      
      // Meal Plans: Only household members can manage them.
      match /mealPlan/{weekId} {
        allow read, write, delete: if isInHousehold(householdId);
      }

      // Daily Suggestions: Only household members can manage them.
      match /dailySuggestions/{dayId} {
        allow read, write, delete: if isInHousehold(householdId);
      }
    }

    // Public Recipes: Anyone can read, but only backend functions can create/update/delete.
    match /publicRecipes/{recipeId} {
      allow read: if true;
      allow write, delete: if false; // Disallow client-side writes
    }
    
    // Feedback: Any authenticated user can submit feedback.
    match /feedback/{feedbackId} {
        allow create: if isSignedIn();
        // Read/update/delete should be restricted to admins or backend processes.
        allow read, update, delete: if false;
    }

    // App-wide configuration should be readable by any authenticated user.
    match /appConfiguration/{docId} {
      allow read: if isSignedIn();
      // Writes should be restricted to admins from the console.
      allow write: if false;
    }
  }
}
